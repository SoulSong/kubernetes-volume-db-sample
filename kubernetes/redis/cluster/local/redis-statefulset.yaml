apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: volumn-ns
spec:
  # mapping headless-service name
  serviceName: redis-cluster-headless
  selector:
    matchLabels:
      app: redis-cluster
  replicas: 6
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
        - name: redis
          image: redis:5.0.4
          securityContext:
            privileged: true
          ports:
            - containerPort: 6379
              name: client
            - containerPort: 16379
              name: gossip
          command: ["/conf/init.sh", "redis-server", "/conf/redis.conf"]
          resources:
            limits:
              cpu: "0.1"
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 15
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "redis-cli -h $(hostname) ping"
            initialDelaySeconds: 20
            periodSeconds: 3
          volumeMounts:
            - mountPath: "/conf"
              name: config
              readOnly: false
            - mountPath: "/data"
              name: redis-data
              readOnly: false
      volumes:
        - name: config
          configMap:
            name: redis-cluster-configmap
            defaultMode: 0755
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        namespace: volumn-ns
      spec:
        storageClassName: local-storage
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 190Mi